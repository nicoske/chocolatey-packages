name: Update Chocolatey Package

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-package:
    runs-on: windows-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
          
      - name: Install AU and dependencies
        shell: pwsh
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force
          if (!(Get-PackageProvider -ListAvailable -Name NuGet)) {
            [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
            Register-PSRepository -Default -Force
            Install-PackageProvider -Name NuGet -MinimumVersion 2.8.5.201 -Force -Scope CurrentUser
          }
          Set-PSRepository -Name PSGallery -InstallationPolicy Trusted
          Install-Module AU -Force -Scope CurrentUser
          Install-Module powershell-yaml -Force -Scope CurrentUser

      - name: Set Chocolatey API Key
        shell: pwsh
        run: |
          choco apikey --key $env:ChocolateyApiKey --source "https://push.chocolatey.org/"
        env:
          ChocolateyApiKey: ${{ secrets.CHOCO_API_KEY }}
          
      - name: Run AU update script
        id: au-update
        shell: pwsh
        env:
          au_Push: 'false'  # Disable pushing from AU
          github_user_repo: ${{ github.repository }}
          github_api_key: ${{ github.token }}
          gist_id: ${{ secrets.GIST_ID }}
          ChocolateyApiKey: ${{ secrets.CHOCO_API_KEY }}
        run: |
          $ErrorActionPreference = 'Stop'
          cd $env:GITHUB_WORKSPACE
          $updateResult = ./update_all.ps1 -ForcedPackages "tomcat"
          
          # Extract updated packages
          $updatedPackages = @($updateResult.updated.Keys) -join ','
          Write-Host "Updated packages: $updatedPackages"
          "updated_packages=$updatedPackages" >> $env:GITHUB_OUTPUT
          
      - name: Debug Package Files
        shell: pwsh
        run: |
          Write-Host "Checking for .nupkg files in repository"
          Get-ChildItem -Path $env:GITHUB_WORKSPACE -Recurse -Filter "*.nupkg" | ForEach-Object {
              Write-Host "Found .nupkg file: $($_.FullName)"
          }
          
          Write-Host "Checking tomcat package directory"
          Get-ChildItem -Path "$env:GITHUB_WORKSPACE\automatic\tomcat" | ForEach-Object {
              Write-Host "File in tomcat directory: $($_.Name)"
          }
          
      - name: Push Package to Chocolatey
        shell: pwsh
        if: contains(steps.au-update.outputs.updated_packages, 'tomcat')
        run: |
          $nupkgFile = Get-ChildItem -Path "$env:GITHUB_WORKSPACE\automatic\tomcat" -Filter "*.nupkg" | Select-Object -First 1
          if ($nupkgFile) {
            Write-Host "Found package file: $($nupkgFile.FullName)"
            Write-Host "Pushing package to Chocolatey..."
            choco push $nupkgFile.FullName --source="https://push.chocolatey.org/" --api-key=$env:ChocolateyApiKey
          } else {
            Write-Host "No .nupkg file found in tomcat directory"
          }
        env:
          ChocolateyApiKey: ${{ secrets.CHOCO_API_KEY }}
          
      - name: Check for changes
        id: git-check
        shell: pwsh
        run: |
          $hasChanges = -not [string]::IsNullOrEmpty($(git status --porcelain))
          Write-Output "Has changes: $hasChanges"
          "has_changes=$hasChanges" >> $env:GITHUB_OUTPUT
        
      - name: Commit and push changes
        if: steps.git-check.outputs.has_changes == 'True'
        shell: pwsh
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Automatic package update"
          git push
